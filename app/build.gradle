import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'bugly'

bugly {
  appId = "53f130a513"
  appKey = "59938ce5-3775-4adf-bc27-f4d732a5ff86"
  debug = false
}

def releaseTime() {
  SimpleDateFormat sdf = new SimpleDateFormat("MMdd-HHmm")
  return sdf.format(new Date())
}

android {

  signingConfigs {
    yongbang {
      keyAlias 'yonbang'
      keyPassword 'yongbang'
      storeFile file('yongbang.jks')
      storePassword 'yongbang'
    }
  }

  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "com.banmaz.yongbang"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 10
    versionName "1.0.0"
    multiDexEnabled true
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    buildConfigField "int", "serviceEnvironment", "0" //正式环境
    ndk {
      // 设置支持的 SO 库构架，一般而言，取你所有的库支持的构架的`交集`。
      abiFilters 'armeabi-v7a'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }


  lintOptions {
    disable 'MissingTranslation'
  }


  buildTypes {
    debug {
      debuggable true
      shrinkResources false
      minifyEnabled false
      zipAlignEnabled false
      signingConfig signingConfigs.yongbang
      applicationVariants.all { variant ->
        if (variant.buildType.name == 'debug') {
          variant.outputs.all { output ->
            def apkName = "yongbang"
            if (!variant.flavorName.isEmpty()) {
              apkName += "-${variant.flavorName}"
            }
            def appName = apkName + "-${variant.buildType.name}" +
                "-${variant.versionCode}" +
                "-${releaseTime()}.apk";
            outputFileName = new File(appName)
          }
        }
      }
    }

    release {
      debuggable false
      minifyEnabled false
      zipAlignEnabled true
      shrinkResources false
      signingConfig signingConfigs.yongbang
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
          variant.outputs.all { output ->
            def apkName = "yongbang"
            if (!variant.flavorName.isEmpty()) {
              apkName += "-${variant.flavorName}"
            }
            def appName = apkName + "-${variant.buildType.name}" +
                "-${variant.versionCode}" +
                "-${releaseTime()}.apk";
            outputFileName = new File(appName)
          }
        }
      }
    }
  }

  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
      assets.srcDirs = ['src/main/assets', 'src/main/assets/']
      res.srcDirs = [
          'src/main/res/layouts/common/public',
          'src/main/res/layouts/common',
          'src/main/res/layouts/login',
          'src/main/res/layouts/main',
          'src/main/res/layouts',
          'src/main/res']
    }
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }

  flavorDimensions "yongbang"

  productFlavors {
    product_test {
      dimension "yongbang"
      buildConfigField "int", "serviceEnvironment", "1" // 测试环境
      //minSdkVersion 21
    }

    product_fac {
      dimension "yongbang"
    }
  }
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
  resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation 'com.android.support.constraint:constraint-layout:1.1.2'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  //support
  implementation "com.android.support:support-v4:${SUPPORT_VERSION}"
  implementation "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
  implementation "com.android.support:recyclerview-v7:${SUPPORT_VERSION}"
  implementation "com.android.support:design:${SUPPORT_VERSION}"

  // retrofit系列
  implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
  implementation "com.squareup.retrofit2:converter-gson:${CONVERTER_GSON_VERSION}"
  implementation "com.squareup.retrofit2:adapter-rxjava2:${ADAPTER_RXJAVA_VERSION}"

  implementation 'com.github.liuguoquan727.library:core:2.6.1'
  implementation "com.android.support:multidex:${MULTIDEX_VERSION}"

  // 权限管理
  implementation "com.github.hotchemi:permissionsdispatcher:${PERMISSIONSDISPATCHER_VERSION}"
  annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:${PERMISSIONSDISPATCHER_VERSION}"

  // inject
  implementation "com.jakewharton:butterknife:${BUTTERKNIFE_VERSION}"
  annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTERKNIFE_VERSION}"

  implementation 'com.orhanobut:logger:2.1.1'

  implementation 'com.amap.api:navi-3dmap:6.1.0_3dmap6.2.0'
  implementation 'com.amap.api:search:6.1.0'
  implementation 'com.amap.api:location:4.0.1'

  //bugly
  api 'com.tencent.bugly:crashreport:2.6.6.1'
  api 'com.tencent.bugly:nativecrashreport:3.3.1'
}
